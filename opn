#!/bin/zsh

arg1=$1
arg2=$2
scripts_pwd=$HOME/.local/scripts

if [[ "$arg1" = "-h" || "$arg1" = "--help" ]]; then
    echo "\n[${INFO}INFO${RESET}] For shortcutting creating new scripts:"
    echo "\n\topn [(-n) or (new)] [<name of new script>]"
    echo "\n[${INFO}INFO${RESET}] Turn newly created scripts into executables:"
    echo "\n\topn chmod [<name of script>]"
    echo "\n[${INFO}INFO${RESET}] Available Scripts:"
    ls $scripts_pwd | grep -v README.md | sed 's/^/> /'
    echo
elif [[ "$arg1" = "-n" || "$arg1" = "new" ]]; then
    echo "\n[${INFO}INFO${RESET}] Creating a new zsh script for "$arg2...
    echo '#!/bin/zsh' > "$scripts_pwd/$arg2"
    code $scripts_pwd/$arg2
elif [[ "$arg1" = "chmod" ]]; then
    if [[ -f "$scripts_pwd/$arg2" ]]; then
        echo "\n[${INFO}INFO${RESET}] Turning '$arg2' into an executable file..."
        chmod +x "$scripts_pwd/$arg2"
        if [[ $? -eq 0 ]]; then 
          echo "\n[${INFO}INFO${RESET}] Successfully made '$arg2' executable."
        else
          echo "\n[${ERROR}ERROR${RESET}] Failed to make '$arg2' executable."
        fi
    else
        echo "\n[${ERROR}ERROR${RESET}] '$arg2' is not a file."
    fi
    echo
elif [[ "$arg1" = "cat" ]]; then
    cat 
elif [[ ! -e "$scripts_pwd/$arg1" ]]; then\
    echo "\n[${ERROR}ERROR${RESET}] Script not found:"$scripts_pwd/$arg1
    echo
    echo "\n[${INFO}INFO${RESET}] Valid aruments include:"
    ls $scripts_pwd | grep -v README.md | sed 's/^/> /'
    echo
else
    echo $scripts_pwd/$arg1
    code $scripts_pwd/$arg1
fi
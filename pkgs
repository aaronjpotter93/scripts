#!/bin/zsh

# --- Config ---
CLEAN_FILE="clean-me.md"
RESTORE_FILE="restore-me.md"
DEBUG_ENABLED="false"

# --- Logging ---
log_debug() {
  [[ "$DEBUG_ENABLED" == "true" ]] && echo "DEBUG: $@" >&2
}

# --- Directory Cleaners ---
track_npm_cleanup() {
  local project_dir="$1"
  local entries=()
  
  # Check for deletable directories relative to project root
  [[ -d "$project_dir/node_modules" ]] && entries+=("node_modules")
  [[ -d "$project_dir/dist" ]] && entries+=("dist")
  [[ -d "$project_dir/.angular/cache" ]] && entries+=(".angular/cache")
  [[ -d "$project_dir/coverage" ]] && entries+=("coverage")

  if (($#entries > 0)); then
    {
      echo "### NPM Project: $(basename $project_dir)"
      echo '```bash'
      # Use relative paths (executed from project root)
      for entry in "${entries[@]}"; do
        echo "rm -rf '$entry'"
      done
      echo '```\n'
    } >> $CLEAN_FILE

    {
      echo "### NPM Project: $(basename $project_dir)"
      echo '```bash'
      echo "cd '$project_dir' && npm install"
      echo '```\n'
    } >> $RESTORE_FILE
  fi
}

track_maven_cleanup() {
  local project_dir="$1"
  
  # Check for target directory AND pom.xml to confirm it's a Maven project
  if [[ -d "$project_dir/target" && -f "$project_dir/pom.xml" ]]; then
    {
      echo "### Maven Project: $(basename $project_dir)"
      echo '```bash'
      echo "cd '$project_dir' && mvn clean" 
      echo '```\n'
    } >> $CLEAN_FILE

    {
      echo "### Maven Project: $(basename $project_dir)"
      echo '```bash'
      echo "cd '$project_dir' && mvn clean install"
      echo '```\n'
    } >> $RESTORE_FILE
  fi
}

# --- Scanners ---
scan_project() {
  local project_dir="$1"
  
  # Always process the directory itself first
  [[ -f "$project_dir/package.json" ]] && track_npm_cleanup "$project_dir"
  [[ -f "$project_dir/pom.xml" ]] && track_maven_cleanup "$project_dir"

  # Then process its subdirectories
  find "$project_dir" -maxdepth 1 -mindepth 1 -type d | while read sub_dir; do
    [[ -f "$sub_dir/package.json" ]] && track_npm_cleanup "$sub_dir"
    [[ -f "$sub_dir/pom.xml" ]] && track_maven_cleanup "$sub_dir"
  done
}

# --- Main Logic ---
main() {
  local directory_path="$1"
  
  # Init report files
  echo "# Cleanup Commands\n" > $CLEAN_FILE
  echo "# Restore Commands\n" > $RESTORE_FILE

  # Process both the root directory and its immediate children
  scan_project "$directory_path"

  echo "Generated:"
  echo "- $CLEAN_FILE"
  echo "- $RESTORE_FILE"
}

# --- Execution ---
DEBUG_ENABLED="false"

# Argument parsing
while getopts "d" opt; do
  case $opt in
    d) DEBUG_ENABLED="true" ;;
    *) echo "Usage: $0 [-d] <directory>" >&2; exit 1 ;;
  esac
done
shift $((OPTIND-1))

[[ $# -ne 1 ]] && { echo "Usage: $0 [-d] <directory>" >&2; exit 1; }
[[ ! -d "$1" ]] && { echo "Directory not found: $1" >&2; exit 1; }

main "$1"
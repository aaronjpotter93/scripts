#!/bin/bash

# Print . for "This directory"
printf ".\n\n"

# ANSI color codes
COLOR_FILE="\e[90m"  # Grey color for file names
COLOR_DIR="\e[0m"   # Cheeky default color for directory names
COLOR_YELLOW="\e[33m"  # Yellow color for file contents
COLOR_RESET="\e[0m"  # Reset to default color

# Set the column width for wrapping (e.g., 80 characters)
WRAP_WIDTH=100

# Function to print directory tree
function print_tree() {
  local path="$1"
  local indent="$2"
  local last="$3"  # Flag for whether this is the last item in the directory

  # Get the contents of the directory
  local items=("$path"/*)
  local count=${#items[@]}  # Count of items in the directory

  # Loop through the contents of the directory
  for i in "${!items[@]}"; do
    local item="${items[$i]}"
    local is_last=$((i == count - 1))  # Check if this is the last item

    if [ -d "$item" ]; then
      # It's a directory, print its name
      if [ $is_last -eq 1 ]; then
        printf "${indent}${COLOR_DIR}└── %s${COLOR_RESET}\n" "$(basename "$item")"
        print_tree "$item" "${indent}    " 1  # Pass 1 to indicate this is the last child
      else
        printf "${indent}${COLOR_DIR}├── %s${COLOR_RESET}\n" "$(basename "$item")"
        print_tree "$item" "${indent}│   " 0  # Pass 0 to indicate there are more items
      fi
    elif [ -f "$item" ]; then
      # It's a file, print its name and content in yellow
      if [ $is_last -eq 1 ]; then
        printf "${indent}${COLOR_FILE}└── %s${COLOR_RESET}\n" "$(basename "$item")"
      else
        printf "${indent}${COLOR_FILE}├── %s${COLOR_RESET}\n" "$(basename "$item")"
      fi
      
      # Indent and display the content of the file in yellow
      local full_indent="${indent}    "  # Create a full indent for file content
      while IFS= read -r line; do
        # Use 'fold' to wrap long lines, and ensure wrapped lines start with proper indentation
        echo "$line" | fold -s -w $((WRAP_WIDTH - ${#full_indent})) | while IFS= read -r wrapped_line; do
          printf "${full_indent}${COLOR_YELLOW}%s${COLOR_RESET}\n" "$wrapped_line"
        done
      done < "$item"
      printf "\n"
    fi
  done
}

# Start from the current directory
print_tree "." "" 0

printf "\n"
